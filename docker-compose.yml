services:
  weaviate:
    command:
    - --host
    - 0.0.0.0
    - --port
    - '8080'
    - --scheme
    - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.28.2
    ports:
    - 8080:8080
    - 50051:50051
    volumes:
    - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      PROMETHEUS_MONITORING_ENABLED: 'true'
      QUERY_DEFAULTS_LIMIT: 25
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'false'
      AUTHENTICATION_APIKEY_ENABLED: 'true'
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: 'admin_key,viewer-key'
      AUTHENTICATION_APIKEY_USERS: 'admin,viewer'
      AUTHORIZATION_ENABLE_RBAC: 'true'
      AUTHORIZATION_ADMIN_USERS: 'admin'
      AUTHORIZATION_VIEWER_USERS: 'viewer'
      AUTOSCHEMA_ENABLED: false
    networks:
      - backend-network

  backend:
    image: backend-image
    ports:
      - 8000:8000
    networks:
      - backend-network
    depends_on:
      - weaviate
    environment:
      - WV_HTTP_HOST=weaviate
      - WV_HTTP_PORT=8080
      - WV_GRPC_HOST=weaviate
      - WV_GRPC_PORT=50051
      - WV_API_KEY=admin-key

  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - ./prometheus:/etc/prometheus/
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - backend-network

  grafana:
    image: grafana/grafana-oss
    ports:
      - 3000:3000
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/prometheus.yml
      - ./grafana/dashboard_provider.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - backend-network

volumes:
  weaviate_data:

networks:
  backend-network:
    driver: bridge