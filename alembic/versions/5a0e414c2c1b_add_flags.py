"""Add flags

Revision ID: 5a0e414c2c1b
Revises: ebff7e2802c5
Create Date: 2025-09-24 14:36:12.489134

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5a0e414c2c1b"
down_revision: str | Sequence[str] | None = "ebff7e2802c5"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "NO_PARSING",
        "POOR",
        "FAIR",
        "GOOD",
        "EXCELLENT",
        "UNSPECIFIED",
        name="parsingquality",
    ).create(op.get_bind())
    sa.Enum(
        "NO_INDEXING", "SUCCESS", "PARTIAL_SUCESS", "FAILED", name="indexingsuccess"
    ).create(op.get_bind())
    op.add_column(
        "document_table",
        sa.Column(
            "parsing_quality",
            postgresql.ENUM(
                "NO_PARSING",
                "POOR",
                "FAIR",
                "GOOD",
                "EXCELLENT",
                "UNSPECIFIED",
                name="parsingquality",
                create_type=False,
            ),
            nullable=False,
        ),
    )
    op.add_column(
        "document_table",
        sa.Column(
            "indexing_sucess",
            postgresql.ENUM(
                "NO_INDEXING",
                "SUCCESS",
                "PARTIAL_SUCESS",
                "FAILED",
                name="indexingsuccess",
                create_type=False,
            ),
            nullable=False,
        ),
    )
    op.drop_column("document_table", "is_indexed")
    op.add_column(
        "election_table", sa.Column("wv_collection", sa.String(), nullable=False)
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("election_table", "wv_collection")
    op.add_column(
        "document_table",
        sa.Column("is_indexed", sa.BOOLEAN(), autoincrement=False, nullable=False),
    )
    op.drop_column("document_table", "indexing_sucess")
    op.drop_column("document_table", "parsing_quality")
    sa.Enum(
        "NO_PARSING",
        "POOR",
        "FAIR",
        "GOOD",
        "EXCELLENT",
        "UNSPECIFIED",
        name="parsingquality",
    ).drop(op.get_bind())
    sa.Enum(
        "NO_INDEXING", "SUCCESS", "PARTIAL_SUCESS", "FAILED", name="indexingsuccess"
    ).drop(op.get_bind())
    # ### end Alembic commands ###
